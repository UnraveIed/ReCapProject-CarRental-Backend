// <auto-generated />
using System;
using CarRental.DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRental.DataAccess.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    partial class CarRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarRental.Entities.Concrete.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9340),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9341),
                            Name = "Mercedes",
                            Note = "Mercedes Markası"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9343),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9344),
                            Name = "BMV",
                            Note = "BMV Markası"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9345),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9346),
                            Name = "Lamborghini",
                            Note = "Lamborghini Markası"
                        },
                        new
                        {
                            Id = 4,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9348),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9351),
                            Name = "Ferrari",
                            Note = "Ferrari Markası"
                        },
                        new
                        {
                            Id = 5,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9353),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9353),
                            Name = "Opel",
                            Note = "Opel Markası"
                        },
                        new
                        {
                            Id = 6,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9355),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9356),
                            Name = "Peugeot",
                            Note = "Peugeot Markası"
                        },
                        new
                        {
                            Id = 7,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9358),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9358),
                            Name = "Koenigsegg",
                            Note = "Koenigsegg Markası"
                        },
                        new
                        {
                            Id = 8,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9360),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9361),
                            Name = "Aston Martin",
                            Note = "Aston Martin Markası"
                        },
                        new
                        {
                            Id = 9,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9363),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9363),
                            Name = "Porsche",
                            Note = "Porsche Markası"
                        },
                        new
                        {
                            Id = 10,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9365),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9365),
                            Name = "McLaren",
                            Note = "McLaren Markası"
                        },
                        new
                        {
                            Id = 11,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9367),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 623, DateTimeKind.Local).AddTicks(9368),
                            Name = "Ford",
                            Note = "Ford Markası"
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DailyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short>("ModelYear")
                        .HasColumnType("smallint");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ColorId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            ColorId = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3035),
                            DailyPrice = 950000.00m,
                            Description = "Iyi bir model 1",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2019,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3036),
                            Note = "1. Araba"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            ColorId = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3039),
                            DailyPrice = 850000.00m,
                            Description = "Iyi bir model 2",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2017,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3040),
                            Note = "2. Araba"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            ColorId = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3043),
                            DailyPrice = 1000000.00m,
                            Description = "Iyi bir model 3",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2021,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3044),
                            Note = "3. Araba"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            ColorId = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3048),
                            DailyPrice = 980000.00m,
                            Description = "Iyi bir model 4",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2020,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3049),
                            Note = "4. Araba"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            ColorId = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3051),
                            DailyPrice = 150000.00m,
                            Description = "Iyi bir model 5",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2014,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3052),
                            Note = "5. Araba"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            ColorId = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3055),
                            DailyPrice = 250000.00m,
                            Description = "Iyi bir model 6",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2021,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(3055),
                            Note = "6. Araba"
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.CarImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("CarImages");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(431),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(432),
                            Name = "Sarı",
                            Note = "Sarı Rengi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(434),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(435),
                            Name = "Kırmızı",
                            Note = "Kırmızı Rengi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(437),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(437),
                            Name = "Mavi",
                            Note = "Mavi Rengi"
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "AE Yazılım",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(4088),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(4089),
                            Note = "1. Musteri",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Selçuk Üniversitesi",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(4091),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(4092),
                            Note = "2. Musteri",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 5,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(6533),
                            CustomerId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(6534),
                            Note = "Ilk kira",
                            RentDate = new DateTime(2022, 12, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnDate = new DateTime(2022, 12, 29, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            CarId = 6,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(6538),
                            CustomerId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(6539),
                            Note = "2. kira",
                            RentDate = new DateTime(2022, 12, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnDate = new DateTime(2022, 12, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "user"
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("VARBINARY(500)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("VARBINARY(500)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(8449),
                            Email = "batu@inal.com",
                            FirstName = "Batuhan",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "İnal",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(8450),
                            Note = "User data seed",
                            PasswordHash = new byte[] { 219, 211, 86, 29, 23, 181, 237, 84, 2, 240, 114, 15, 56, 4, 192, 67, 8, 225, 79, 177, 92, 236, 207, 167, 125, 114, 227, 11, 163, 195, 56, 136, 188, 170, 100, 17, 63, 40, 116, 254, 47, 147, 93, 236, 149, 57, 97, 31, 252, 87, 124, 72, 48, 116, 186, 108, 245, 221, 93, 60, 52, 0, 71, 163 },
                            PasswordSalt = new byte[] { 206, 13, 105, 42, 25, 71, 145, 47, 222, 114, 219, 125, 83, 239, 190, 66, 162, 209, 7, 47, 171, 246, 41, 134, 8, 223, 70, 8, 233, 133, 157, 205, 238, 97, 114, 14, 188, 113, 55, 187, 96, 131, 241, 203, 190, 183, 254, 163, 200, 173, 244, 109, 200, 36, 179, 145, 171, 76, 147, 228, 94, 210, 133, 164, 175, 89, 214, 149, 10, 105, 4, 235, 229, 58, 184, 16, 26, 200, 89, 42, 161, 222, 14, 53, 61, 232, 213, 68, 59, 57, 132, 99, 9, 5, 68, 239, 110, 133, 186, 96, 99, 100, 48, 12, 45, 42, 255, 204, 78, 30, 63, 131, 63, 238, 124, 201, 215, 111, 158, 8, 66, 181, 162, 97, 22, 127, 238, 214 }
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(8452),
                            Email = "samet@inal.com",
                            FirstName = "Samet",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "İnal",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(8453),
                            Note = "User data seed",
                            PasswordHash = new byte[] { 219, 211, 86, 29, 23, 181, 237, 84, 2, 240, 114, 15, 56, 4, 192, 67, 8, 225, 79, 177, 92, 236, 207, 167, 125, 114, 227, 11, 163, 195, 56, 136, 188, 170, 100, 17, 63, 40, 116, 254, 47, 147, 93, 236, 149, 57, 97, 31, 252, 87, 124, 72, 48, 116, 186, 108, 245, 221, 93, 60, 52, 0, 71, 163 },
                            PasswordSalt = new byte[] { 206, 13, 105, 42, 25, 71, 145, 47, 222, 114, 219, 125, 83, 239, 190, 66, 162, 209, 7, 47, 171, 246, 41, 134, 8, 223, 70, 8, 233, 133, 157, 205, 238, 97, 114, 14, 188, 113, 55, 187, 96, 131, 241, 203, 190, 183, 254, 163, 200, 173, 244, 109, 200, 36, 179, 145, 171, 76, 147, 228, 94, 210, 133, 164, 175, 89, 214, 149, 10, 105, 4, 235, 229, 58, 184, 16, 26, 200, 89, 42, 161, 222, 14, 53, 61, 232, 213, 68, 59, 57, 132, 99, 9, 5, 68, 239, 110, 133, 186, 96, 99, 100, 48, 12, 45, 42, 255, 204, 78, 30, 63, 131, 63, 238, 124, 201, 215, 111, 158, 8, 66, 181, 162, 97, 22, 127, 238, 214 }
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(8455),
                            Email = "ilknur@inal.com",
                            FirstName = "Ilknur",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "İnal",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 24, 15, 48, 19, 624, DateTimeKind.Local).AddTicks(8456),
                            Note = "User data seed",
                            PasswordHash = new byte[] { 219, 211, 86, 29, 23, 181, 237, 84, 2, 240, 114, 15, 56, 4, 192, 67, 8, 225, 79, 177, 92, 236, 207, 167, 125, 114, 227, 11, 163, 195, 56, 136, 188, 170, 100, 17, 63, 40, 116, 254, 47, 147, 93, 236, 149, 57, 97, 31, 252, 87, 124, 72, 48, 116, 186, 108, 245, 221, 93, 60, 52, 0, 71, 163 },
                            PasswordSalt = new byte[] { 206, 13, 105, 42, 25, 71, 145, 47, 222, 114, 219, 125, 83, 239, 190, 66, 162, 209, 7, 47, 171, 246, 41, 134, 8, 223, 70, 8, 233, 133, 157, 205, 238, 97, 114, 14, 188, 113, 55, 187, 96, 131, 241, 203, 190, 183, 254, 163, 200, 173, 244, 109, 200, 36, 179, 145, 171, 76, 147, 228, 94, 210, 133, 164, 175, 89, 214, 149, 10, 105, 4, 235, 229, 58, 184, 16, 26, 200, 89, 42, 161, 222, 14, 53, 61, 232, 213, 68, 59, 57, 132, 99, 9, 5, 68, 239, 110, 133, 186, 96, 99, 100, 48, 12, 45, 42, 255, 204, 78, 30, 63, 131, 63, 238, 124, 201, 215, 111, 158, 8, 66, 181, 162, 97, 22, 127, 238, 214 }
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OperationClaimId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            OperationClaimId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            OperationClaimId = 2,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Car", b =>
                {
                    b.HasOne("CarRental.Entities.Concrete.Brand", "Brand")
                        .WithMany("Cars")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Entities.Concrete.Color", "Color")
                        .WithMany("Cars")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.CarImage", b =>
                {
                    b.HasOne("CarRental.Entities.Concrete.Car", "Car")
                        .WithMany("Cars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Customer", b =>
                {
                    b.HasOne("Core.Entities.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Rental", b =>
                {
                    b.HasOne("CarRental.Entities.Concrete.Car", "Car")
                        .WithMany("Rentals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Entities.Concrete.Customer", "Customer")
                        .WithMany("Rentals")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.HasOne("Core.Entities.Concrete.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Concrete.User", "User")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Brand", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Car", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Color", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Customer", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.Navigation("UserOperationClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
